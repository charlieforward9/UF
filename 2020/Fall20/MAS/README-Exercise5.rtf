{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function [S1,S2,L,R]=stochastic(A) L=[]; R=[]; zeroRow = 0; zeroColumn = 0; if size(A,1) == size(A,2) n = size(A,1); fprintf('the vector of sums down each column is\\n') S1=sum(A,1) fprintf('the vector of sums across each row is\\n') S2=sum(A,2) for i=1:n if A(i,:)== closetozeroroundoff(0,7) zeroRow = 1; end if A(:,i) == closetozeroroundoff(0,7) zeroColumn = 1; end end if zeroColumn == 1 && zeroRow == 1 fprintf('A cannot be scaled to be right nor left stochastic in any way') else if all(S1 == closetozeroroundoff(1,7),2) && all(S2 == closetozeroroundoff(1,7),1) fprintf('A is doubly stochastic') L = A R = A return 1 else if all(S1 == closetozeroroundoff(1,7),2) fprintf('A is left stochastic') L = A return else if all(S2 == closetozeroroundoff(1,7),1) fprintf('A is right stochastic') R = A return end end end if all(S1 ~= closetozeroroundoff(0,7),2) && all(S2 ~= closetozeroroundoff(0,7),1) fprintf('A is neither left nor right stochastic but can be scaled to be either of them\\n') L = zeros(n); R = zeros(n); for i=1:n L(:,i) = 1/S1(1,i) .* A(:,i); end for i=1:n R(i,:) = 1/S2(i,1) .* A(i,:); end if isequal(closetozeroroundoff(L,7),closetozeroroundoff(R,7)) fprintf('A is doubly stochastic after scaling') R else fprintf('Right stochastic of A after scaling\\n') R fprintf('Left stochastic of A after scaling\\n') L end else if all(S1 ~= closetozeroroundoff(0,7),2) fprintf('A is neither left nor right stochastic but can be scaled to be left stochastic\\n') L = zeros(n); for i=1:n L(:,i) = 1/S1(1,i) .* A(:,i); end fprintf('A cannot be scaled to be right stochastic\\n') fprintf('Left stochastic of A after scaling\\n') L else if all(S2 ~= closetozeroroundoff(0,7),1) fprintf('A is neither left nor right stochastic but can be scaled to be right stochastic\\n') R = zeros(n); for i=1:n R(i,:) = 1/S2(i,1) .* A(i,:); end fprintf('Right stochastic of A after scaling\\n') R fprintf('A cannot be scaled to be left stochastic') end end end end else fprintf('matrix A is not square') return end end}